#!/usr/local/bin/zsh

TOKEN="$(git config --get user.token)"
EMAIL="$(git config --get user.email)"

[[ "${EMAIL}" == "s.white.1@elsevier.com" ]] && GITHUB_USERNAME="stuw-els"
[[ "${EMAIL}" == "stubillwhite@gmail.com" ]] && GITHUB_USERNAME="stubillwhite"

function list-all-pull-requests() {
    local fnam=$1

    local page=0
    local incomplete

    local queryUrl="https://api.github.com/search/issues?q=state%3Aopen+author%3A${GITHUB_USERNAME}+type%3Apr"

    local tmpfile=$(mktemp)

    echo > "${fnam}"
    echo '[' >> "${fnam}"
    while : ;
    do
      curl --silent -u "${EMAIL}:${TOKEN}" "${queryUrl}?per_page=100\&page=${page}" > "${tmpfile}"
      cat "${tmpfile}" >> "${fnam}"

      incomplete=$(cat "${tmpfile}" | jq '.incomplete_results')
      [[ "${incomplete}" == "false" ]] && break
      echo "," >> "${fnam}"
      page=$((page + 1))
    done
    echo ']' >> "${fnam}"
}

function pull-request-details() {
    local queryUrl=$1

    local reviewCount=$(curl --silent -u "${EMAIL}:${TOKEN}" "${queryUrl}/reviews" | jq --raw-output 'length')

    curl --silent -u "${EMAIL}:${TOKEN}" "${queryUrl}" \
        | jq --raw-output --arg reviews "${reviewCount}" '[.head.repo.name, 
                                                           .state, 
                                                           (if $reviews > 0 then "has-reviews" else "no-reviews" end), 
                                                           (if .comments > 0 or .review_comments > 0 then "has-comments" else "no-comments" end), 
                                                           .html_url, 
                                                           (.title | tojson) 
                                                          ] | @tsv'
}

if ([[ -z "${TOKEN}" ]] || [[ -z "${EMAIL}" ]] || [[ -z "${GITHUB_USERNAME}" ]]); then 
    echo 'Unable to find read token, email, and GitHub username'
    echo 'Check the output of:'
    echo '  git config --get user.token'
    echo '  git config --get user.email'
    return 1
fi

echo "Pull requests for ${GITHUB_USERNAME}:"

tmpfile=$(mktemp)

list-all-pull-requests "${tmpfile}"

while IFS=, read -rA url
do
    pull-request-details "${url}"
done < <(cat "${tmpfile}" | jq --raw-output '.[].items[].pull_request.url') \
    | column -t -s $'\t'
